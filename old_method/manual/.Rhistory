intl_en <- data[[1]][col_start+2]
intl_de <- data[[1]][col_start+3]
intl_de
library(tidyverse)
library(stringr)
library(pdftools)
months <- c("JANUARY","FEBRUARY","MARCH","APRIL","MAY","JUNE","JULY","AUGUST","SEPTEMBER","OCTOBER","NOVEMBER","DECEMBER")
year <- 2020
col_start <- 4 # which colums/element number each of these numbers appears in, want domestic/intl. deplaned and enplaned monthly total
# from here: https://www.flymemphis.com/statistics, calendar year monthly. URL have to be changed for 2021
url <- "https://www.flymemphis.com/Areas/Admin/Images/Upload_2020055092924.pdf"
pages_per_month <- 5 # how many pages each month gets
data_page <- 3 # on which page of each month the necessary data appears
all_data <- data.frame(year=2000, month=1, air_freight_mem=0)
pdf <- pdf_text(url)
for (i in 1:(length(pdf) / pages_per_month)) {
month <- months[i]
start_page <- pages_per_month * i - pages_per_month + 1
end_page <- start_page + pages_per_month - 1
subset <- pdf[start_page:end_page]
text <- subset[data_page]
start_data <- str_locate_all(pattern="MONTHLY TOTALS", text)[[1]][2]
data <- text %>%
substr(start_data, start_data + 1000) %>%
str_replace_all("[\n| ]", "-") %>%
str_replace_all(",", "")
data <- gsub("([-])\\1{1,}", "\\1", data) %>% strsplit("-")
dom_en <- data[[1]][col_start] %>% as.numeric
dom_de <- data[[1]][col_start+1] %>% as.numeric
intl_en <- data[[1]][col_start+2] %>% as.numeric
intl_de <- data[[1]][col_start+3] %>% as.numeric
tmp <- data.frame(year=year, month=i, air_freight_mem=dom_en+dom_de+intl_en+intl_de)
all_data <- all_data %>%
rbind(tmp)
}
all_data <- all_data %>% slice(2:n())
all_data
library(tidyverse)
library(stringr)
library(pdftools)
year <- 2020
col_start <- 4 # which colums/element number each of these numbers appears in, want domestic/intl. deplaned and enplaned monthly total
# from here: https://www.flymemphis.com/statistics, calendar year monthly. URL have to be changed for 2021
url <- "https://www.flymemphis.com/Areas/Admin/Images/Upload_2020055092924.pdf"
pages_per_month <- 5 # how many pages each month gets
data_page <- 3 # on which page of each month the necessary data appears
all_data <- data.frame(year=2000, month=1, air_freight_mem=0)
pdf <- pdf_text(url)
for (i in 1:(length(pdf) / pages_per_month)) {
start_page <- pages_per_month * i - pages_per_month + 1
end_page <- start_page + pages_per_month - 1
subset <- pdf[start_page:end_page]
text <- subset[data_page]
start_data <- str_locate_all(pattern="MONTHLY TOTALS", text)[[1]][2]
data <- text %>%
substr(start_data, start_data + 1000) %>%
str_replace_all("[\n| ]", "-") %>%
str_replace_all(",", "")
data <- gsub("([-])\\1{1,}", "\\1", data) %>% strsplit("-")
dom_en <- data[[1]][col_start] %>% as.numeric
dom_de <- data[[1]][col_start+1] %>% as.numeric
intl_en <- data[[1]][col_start+2] %>% as.numeric
intl_de <- data[[1]][col_start+3] %>% as.numeric
tmp <- data.frame(year=year, month=i, air_freight_mem=dom_en+dom_de+intl_en+intl_de)
all_data <- all_data %>%
rbind(tmp)
}
all_data <- all_data %>% slice(2:n())
all_data
year <- 2020
url <- "https://www.portoflosangeles.org/business/statistics/container-statistics/historical-teu-statistics-"
final_url <- str_interp("${url}${year}")
library(tidyverse)
year <- 2020
url <- "https://www.portoflosangeles.org/business/statistics/container-statistics/historical-teu-statistics-"
final_url <- str_interp("${url}${year}")
final_url
library(htmltab)
library(XML)
readHTMLTable(final_url)
library(RCurl)
webpage <- getURL(final_url)
webpage
webpage <- readLines(tc <- textConnection(webpage)); close(tc)
pagetree <- htmlTreeParse(webpage, error=function(...){}, useInternalNodes = TRUE)
pagetree
tablehead <- xpathSApply(pagetree, "//*/table[@class='table']/tr/th", xmlValue)
results <- xpathSApply(pagetree, "//*/table[@class='table']/tr/td", xmlValue)
tablehead
results
pagetree
tablehead <- xpathSApply(pagetree, "//*/table[@class=table]/tr/th", xmlValue)
tablehead
xmlValue
tablehead <- xpathSApply(pagetree, "//*/table/tr/th", xmlValue)
results <- xpathSApply(pagetree, "//*/table/tr/td", xmlValue)
tablehad
tablehead
results
tablehead[1]
tablehead <- xpathSApply(pagetree, "//*/table[@class='table']/tr/th", xmlValue)
tablehead
library(rvest)
library(rvest)
file<-read_html(final_url)
tables <- html_nodes(file, "table")
tables
table1 <- html_table(tables[1], fill = TRUE)
table1
file <- read_html(final_url)
tables <- html_nodes(file, "table")
table1 <- html_table(tables[1], fill = TRUE) %>% data_frame
file <- read_html(final_url)
tables <- html_nodes(file, "table")
table1 <- html_table(tables[1], fill = TRUE) %>% tibble
table1
table1
View(table1)
View(table1)
table1 <- html_table(tables[1], fill = TRUE)
table1
table1[[1]]
file <- read_html(final_url)
tables <- html_nodes(file, "table")
data <- html_table(tables[1], fill = TRUE)
data <- data[[1]] %>% tibble
data
data[,7]
data[,"$X8"]
data[,1]
data
data
data[1]
data[1][,1]
data[[1]]
data[[1]][1]
data[[1]][,1]
data <- html_table(tables[1], fill = TRUE)
data <- data[[1]] %>% tibble
data <- data[[1]]
data
data[,7]
total_exports_col <- 7
total_teus_col <- 8
data[,8]
months <- c("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December")
data
data %>%
select(1, total_exports_col, total_teus_col)
data %>%
select(1, total_exports_col, total_teus_col) %>%
slice(2:n())
data %>%
select(1, total_exports_col, total_teus_col) %>%
slice(2:n()-2)
data %>%
select(1, total_exports_col, total_teus_col) %>%
slice(2:n()-2) %>%
rename(container_exports_la=2, container_total_la=3)
data %>%
select(1, total_exports_col, total_teus_col) %>%
slice(3:n()-2) %>%
rename(container_exports_la=2, container_total_la=3)
data %>%
select(1, total_exports_col, total_teus_col) %>%
slice(1:n()-2) %>%
rename(container_exports_la=2, container_total_la=3)
data %>%
select(1, total_exports_col, total_teus_col) %>%
slice(2:n()-2) %>%
rename(container_exports_la=2, container_total_la=3)
all_data <- data %>%
select(1, total_exports_col, total_teus_col) %>%
slice(2:n()-2) %>%
rename(container_exports_la=2, container_total_la=3)
all_data
all_data[1,]
all_data[2,]
all_data[2:nrow(all_data),]
data %>%
select(1, total_exports_col, total_teus_col) %>%
rename(montoh=1, container_exports_la=2, container_total_la=3) %>%
slice(2:n()-2)
data %>%
select(1, total_exports_col, total_teus_col) %>%
rename(month=1, container_exports_la=2, container_total_la=3) %>%
slice(2:n()-2)
data %>%
select(1, total_exports_col, total_teus_col) %>%
rename(month=1, container_exports_la=2, container_total_la=3) %>%
slice(3:n()-2)
data %>%
select(1, total_exports_col, total_teus_col) %>%
rename(month=1, container_exports_la=2, container_total_la=3) %>%
slice(3:(n()-2))
data %>%
select(1, total_exports_col, total_teus_col) %>%
rename(month=1, container_exports_la=2, container_total_la=3) %>%
slice(2:(n()-2))
data %>%
select(1, total_exports_col, total_teus_col) %>%
rename(month=1, container_exports_la=2, container_total_la=3) %>%
slice(2:(n()-2)) %>%
mutate(container_exports_la = str_replace_all(container_exports_la, ",", ""))
data %>%
select(1, total_exports_col, total_teus_col) %>%
rename(month=1, container_exports_la=2, container_total_la=3) %>%
slice(2:(n()-2)) %>%
mutate(container_exports_la = as.numeric(str_replace_all(container_exports_la, ",", "")))
data %>%
select(1, total_exports_col, total_teus_col) %>%
rename(month=1, container_exports_la=2, container_total_la=3) %>%
slice(2:(n()-2)) %>%
mutate(
container_exports_la = as.numeric(str_replace_all(container_exports_la, ",", "")),
container_total_la = as.numeric(str_replace_all(container_total_la, ",", ""))
)
all_data <- data %>%
select(1, total_exports_col, total_teus_col) %>%
rename(month=1, container_exports_la=2, container_total_la=3) %>%
slice(2:(n()-2)) %>%
mutate(
container_exports_la = as.numeric(str_replace_all(container_exports_la, ",", "")),
container_total_la = as.numeric(str_replace_all(container_total_la, ",", ""))
)
all_data$month
all_data$month %>% sapply(function(x) which(x == months))
data %>%
select(1, total_exports_col, total_teus_col) %>%
rename(month=1, container_exports_la=2, container_total_la=3) %>%
slice(2:(n()-2)) %>%
mutate(
month = sapply(month, function(x) which(x == months)),
container_exports_la = as.numeric(str_replace_all(container_exports_la, ",", "")),
container_total_la = as.numeric(str_replace_all(container_total_la, ",", ""))
)
months <- c("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December")
year <- 2019
url <- "https://www.portoflosangeles.org/business/statistics/container-statistics/historical-teu-statistics-"
total_exports_col <- 7
total_teus_col <- 8
final_url <- str_interp("${url}${year}")
file <- read_html(final_url)
tables <- html_nodes(file, "table")
data <- html_table(tables[1], fill = TRUE)
data <- data[[1]] %>% tibble
data <- data[[1]]
all_data <- data %>%
select(1, total_exports_col, total_teus_col) %>%
rename(month=1, container_exports_la=2, container_total_la=3) %>%
slice(2:(n()-2)) %>%
mutate(
month = sapply(month, function(x) which(x == months)),
container_exports_la = as.numeric(str_replace_all(container_exports_la, ",", "")),
container_total_la = as.numeric(str_replace_all(container_total_la, ",", ""))
)
all_data
all_data[,"month"]
year <- 2020
url <- "https://www.portoflosangeles.org/business/statistics/container-statistics/historical-teu-statistics-"
total_exports_col <- 7
total_teus_col <- 8
final_url <- str_interp("${url}${year}")
file <- read_html(final_url)
tables <- html_nodes(file, "table")
data <- html_table(tables[1], fill = TRUE)
data <- data[[1]] %>% tibble
data <- data[[1]]
all_data <- data %>%
select(1, total_exports_col, total_teus_col) %>%
rename(month=1, container_exports_la=2, container_total_la=3) %>%
slice(2:(n()-2)) %>%
mutate(
month = sapply(month, function(x) which(x == months)),
container_exports_la = as.numeric(str_replace_all(container_exports_la, ",", "")),
container_total_la = as.numeric(str_replace_all(container_total_la, ",", ""))
)
all_data[,"month"]
all_data <- data %>%
select(1, total_exports_col, total_teus_col) %>%
rename(month=1, container_exports_la=2, container_total_la=3) %>%
slice(2:(n()-2)) %>%
filter(month %in% months) %>%
mutate(
month = sapply(month, function(x) which(x == months)),
container_exports_la = as.numeric(str_replace_all(container_exports_la, ",", "")),
container_total_la = as.numeric(str_replace_all(container_total_la, ",", ""))
)
all_dat
all_data
year <- 2019
url <- "https://www.portoflosangeles.org/business/statistics/container-statistics/historical-teu-statistics-"
total_exports_col <- 7
total_teus_col <- 8
final_url <- str_interp("${url}${year}")
file <- read_html(final_url)
tables <- html_nodes(file, "table")
data <- html_table(tables[1], fill = TRUE)
data <- data[[1]] %>% tibble
data <- data[[1]]
all_data <- data %>%
select(1, total_exports_col, total_teus_col) %>%
rename(month=1, container_exports_la=2, container_total_la=3) %>%
slice(2:(n()-2)) %>%
filter(month %in% months) %>%
mutate(
month = sapply(month, function(x) which(x == months)),
container_exports_la = as.numeric(str_replace_all(container_exports_la, ",", "")),
container_total_la = as.numeric(str_replace_all(container_total_la, ",", ""))
)
all_data
library(httr)
# info on the API: https://data.gov.hk/en/help/api-spec#historicalAPI, https://data.gov.hk/en-data/dataset/hk-thb-thb-mpb/resource/a1c00d18-25b4-4f36-8724-a112fd1373e3
# want the "Total ( '000 TEUs)" column
total_teu_col_num <- 5
# to get a file from a specific time
# api_url <- "https://api.data.gov.hk/v1/historical-archive/get-file?url="
# file_name <- "https://www.hkmpb.gov.hk/document/HKP_KTCT-stat_csv1(EN).csv&time="
# as_of <- "20190516-0933"
# final_url <- paste(api_url, file_name, as_of, sep="")
# get latest file
url <- "https://www.hkmpb.gov.hk/document/HKP_KTCT-stat_csv1(EN).csv"
data <- GET(url) %>% content %>% as_tibble
data <- data %>%
filter(month != "All") %>%
select(c(1:2, total_teu_col_num)) %>%
rename(container_hk=3, year=Year) %>%
mutate(month = sapply(month, function(x) which(x == tmp)))
library(tidyverse)
library(httr)
# info on the API: https://data.gov.hk/en/help/api-spec#historicalAPI, https://data.gov.hk/en-data/dataset/hk-thb-thb-mpb/resource/a1c00d18-25b4-4f36-8724-a112fd1373e3
# want the "Total ( '000 TEUs)" column
total_teu_col_num <- 5
# to get a file from a specific time
# api_url <- "https://api.data.gov.hk/v1/historical-archive/get-file?url="
# file_name <- "https://www.hkmpb.gov.hk/document/HKP_KTCT-stat_csv1(EN).csv&time="
# as_of <- "20190516-0933"
# final_url <- paste(api_url, file_name, as_of, sep="")
# get latest file
url <- "https://www.hkmpb.gov.hk/document/HKP_KTCT-stat_csv1(EN).csv"
data <- GET(url) %>% content %>% as_tibble
data <- data %>%
filter(month != "All") %>%
select(c(1:2, total_teu_col_num)) %>%
rename(container_hk=3, year=Year) %>%
mutate(month = sapply(month, function(x) which(x == tmp)))
data
data %>%
filter(month != "All") %>%
select(c(1:2, total_teu_col_num)) %>%
rename(container_hk=3, year=Year)
library(tidyverse)
library(httr)
# info on the API: https://data.gov.hk/en/help/api-spec#historicalAPI, https://data.gov.hk/en-data/dataset/hk-thb-thb-mpb/resource/a1c00d18-25b4-4f36-8724-a112fd1373e3
months <- c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec")
# want the "Total ( '000 TEUs)" column
total_teu_col_num <- 5
# to get a file from a specific time
# api_url <- "https://api.data.gov.hk/v1/historical-archive/get-file?url="
# file_name <- "https://www.hkmpb.gov.hk/document/HKP_KTCT-stat_csv1(EN).csv&time="
# as_of <- "20190516-0933"
# final_url <- paste(api_url, file_name, as_of, sep="")
# get latest file
url <- "https://www.hkmpb.gov.hk/document/HKP_KTCT-stat_csv1(EN).csv"
data <- GET(url) %>% content %>% as_tibble
data <- data %>%
filter(month != "All") %>%
select(c(1:2, total_teu_col_num)) %>%
rename(container_hk=3, year=Year) %>%
mutate(month = sapply(month, function(x) which(x == months)))
data
months
rm(list=ls())
library(tidyverse)
library(rvest)
months <- c("January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December")
year <- 2020
url <- "https://www.portoflosangeles.org/business/statistics/container-statistics/historical-teu-statistics-"
total_exports_col <- 7
total_teus_col <- 8
final_url <- str_interp("${url}${year}")
file <- read_html(final_url)
tables <- html_nodes(file, "table")
data <- html_table(tables[1], fill = TRUE)
data <- data[[1]] %>% tibble
data <- data[[1]]
all_data <- data %>%
select(1, total_exports_col, total_teus_col) %>%
rename(month=1, container_exports_la=2, container_total_la=3) %>%
slice(2:(n()-2)) %>%
filter(month %in% months) %>%
mutate(
month = sapply(month, function(x) which(x == months)),
container_exports_la = as.numeric(str_replace_all(container_exports_la, ",", "")),
container_total_la = as.numeric(str_replace_all(container_total_la, ",", ""))
)
all_data
rm(list=ls())
library(tidyverse)
library(stringr)
library(pdftools)
year <- 2020
col_start <- 4 # which colums/element number each of these numbers appears in, want domestic/intl. deplaned and enplaned monthly total
# from here: https://www.flymemphis.com/statistics, calendar year monthly. URL have to be changed for 2021
url <- "https://www.flymemphis.com/Areas/Admin/Images/Upload_2020055092924.pdf"
pages_per_month <- 5 # how many pages each month gets
data_page <- 3 # on which page of each month the necessary data appears
all_data <- data.frame(year=2000, month=1, air_freight_mem=0)
pdf <- pdf_text(url)
for (i in 1:(length(pdf) / pages_per_month)) {
start_page <- pages_per_month * i - pages_per_month + 1
end_page <- start_page + pages_per_month - 1
subset <- pdf[start_page:end_page]
text <- subset[data_page]
start_data <- str_locate_all(pattern="MONTHLY TOTALS", text)[[1]][2]
data <- text %>%
substr(start_data, start_data + 1000) %>%
str_replace_all("[\n| ]", "-") %>%
str_replace_all(",", "")
data <- gsub("([-])\\1{1,}", "\\1", data) %>% strsplit("-")
dom_en <- data[[1]][col_start] %>% as.numeric
dom_de <- data[[1]][col_start+1] %>% as.numeric
intl_en <- data[[1]][col_start+2] %>% as.numeric
intl_de <- data[[1]][col_start+3] %>% as.numeric
tmp <- data.frame(year=year, month=i, air_freight_mem=dom_en+dom_de+intl_en+intl_de)
all_data <- all_data %>%
rbind(tmp)
}
all_data <- all_data %>% slice(2:n())
all_data
rm(list=ls())
library(tidyverse)
library(stringr)
library(pdftools)
months <- c(
"JANUARY",
"FEBRUARY",
"MARCH",
"APRIL",
"MAY",
"JUNE",
"JULY",
"AUGUST",
"SEPTEMBER",
"OCTOBER",
"NOVEMBER",
"DECEMBER"
)
n_files <- 20 # number of files to reget
prefix <- "https://www.pancanal.com/common/maritime/advisories/"
url <- str_interp("${prefix}/index.html")
html <- paste(readLines(url), collapse="\n")
# all links from page
matched <- str_match_all(html, "<a href=\"(.*?)\"")
files <- matched[[1]][,2]
# keeping only PDFs
files <- files[files %>% sapply(function(x) str_sub(x, -3) == "pdf")] %>% unique
all_data <- data.frame(year=2000, month=1, transit_pa_canal=0)
# loop to get info from pdfs
for (url in files[1:n_files]) {
final_url <- paste(prefix, url, sep="")
pdf <- pdf_text(final_url)
necessary_text <- "Monthly Canal Operations Summary"
if (grepl(necessary_text, pdf[1])) {
raw_month <- str_locate_all(pattern =necessary_text, pdf[1])[[1]][2]
raw_month <- substr(pdf[1], raw_month, raw_month + 100)
month_start <- str_locate(pattern="–", raw_month)[[1]][1]
month_end <- str_locate(pattern="\n", raw_month)[[1]][1]
month <- substr(raw_month, month_start+2, month_end-1)
year <- str_sub(month, -4) %>% as.numeric
month <- which(str_sub(month, 1, nchar(month)-5) == months)
location <- str_locate_all(pattern ='Total:', pdf[1])[[1]][2]
figure_string <- substr(pdf[1], location, location + 100)
figure <- as.numeric(gsub("[^[:alnum:]]","",figure_string))
data <- data.frame(year=year, month=month, transit_pa_canal=figure)
all_data <- rbind(all_data, data)
}
print(url)
Sys.sleep(2)
}
all_data <- all_data %>% slice(2:n())
all_data
rm(list=ls())
library(tidyverse)
library(stringr)
library(pdftools)
total_col <- 6 # whic column the desired total is in in the pdf
year <- 2020
months <- c("Jan.", "Feb.", "Mar.", "Apr.", "May", "Jun.", "Jul.", "Aug.", "Sep.", "Oct.", "Nov.", "Dec.")
url <- str_interp("https://www.suezcanal.gov.eg/English/Downloads/DownloadsDocLibrary/Navigation Reports/Monthly Reports/${year}")
all_data <- data.frame(year=2000, month=1, transit_suez_canal=0)
for (month in months) {
skip <- FALSE
tryCatch({
filename <- str_interp("${month} ${year}.pdf")
final_url <- str_interp("${url}/${filename}") %>% str_replace_all(" ", "%20")
pdf <- pdf_text(final_url)
total_start <- str_locate(pattern="Total", pdf[2])[[2]]
total <- substr(pdf[2], total_start+1, total_start + 100) %>% str_replace_all(" ", "-")
# splitting into columns (replacing differing number of spaces with just one)
total <- gsub("([-])\\1{1,}", "\\1", total) %>% strsplit("-")
value <- total[[1]][total_col] %>% as.numeric
data <- data.frame(year=year, month=which(month == months), transit_suez_canal=value)
all_data <- all_data %>%
rbind(data)
print(month)
}, error = function(e) {skip <<- TRUE}
)
if (skip) {next}
}
all_data <- all_data %>% slice(2:n())
all_data
